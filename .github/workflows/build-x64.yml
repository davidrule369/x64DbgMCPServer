name: Build x64 Plugin

on:
  workflow_dispatch:
  push:
    paths:
      - '**/*.cs'
      - '**/*.csproj'
      - 'Directory.Build.props'
      - '.github/workflows/build-x64.yml'

jobs:
  build:
    runs-on: windows-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}\\packages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Enforce customizations
        shell: pwsh
        run: |
          $attrPath = "DotNetPlugin.Stub/Attributes.DllExport.cs"
          if (-not (Test-Path $attrPath)) {
            @"
namespace RGiesecke.DllExport
{
    using System;
    using System.Runtime.InteropServices;
    [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)]
    public sealed class DllExportAttribute : Attribute
    {
        public DllExportAttribute() { }
        public DllExportAttribute(string entryPoint) { EntryPoint = entryPoint; }
        public DllExportAttribute(string entryPoint, CallingConvention callingConvention) { EntryPoint = entryPoint; CallingConvention = callingConvention; }
        public string EntryPoint { get; }
        public CallingConvention CallingConvention { get; }
    }
}
"@ | Set-Content -NoNewline $attrPath
          }

          $pmPath = "DotNetPlugin.Stub/PluginMain.cs"
          if (Test-Path $pmPath) {
            $pm = Get-Content $pmPath -Raw
            if ($pm -notmatch "\[RGiesecke\.DllExport\.DllExport\(") {
              $pm = $pm -replace "\[DllExport\(", "[RGiesecke.DllExport.DllExport("
              Set-Content $pmPath $pm
            }
          }

      - name: Restore
        run: msbuild x64DbgMCPServer.sln /t:Restore /p:Platform=x64 /p:Configuration=Release /p:RestorePackagesPath="${{ env.NUGET_PACKAGES }}" /p:BaseIntermediateOutputPath=.cache\\obj\\

      - name: Build x64 Release
        run: msbuild x64DbgMCPServer.sln /t:Rebuild /p:Platform=x64 /p:Configuration=Release /p:RestorePackagesPath="${{ env.NUGET_PACKAGES }}" /p:BaseIntermediateOutputPath=.cache\\obj\\ /p:BaseOutputPath=.cache\\bin\\

      - name: Upload artifact (dp64)
        uses: actions/upload-artifact@v4
        with:
          name: AgentSmithers_x64DbgMCP_x64Plugin
          path: |
            bin\\x64\\Release\\**\\*.dp64
            bin\\x64\\Release\\**\\*.dll
            bin\\x64\\Release\\**\\*.pdb
          if-no-files-found: error

      - name: Cleanup caches
        if: always()
        run: |
          Remove-Item -Recurse -Force .cache -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force packages -ErrorAction SilentlyContinue
